name: Build Flutter APK

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # 2. Verify repository structure and confirm Flutter project exists
      - name: Verify Directory Structure
        run: |
          echo "Repository root:"
          ls -la
          echo "Listing voice-assistant-app folder:"
          ls -la voice-assistant-app
          echo "Checking for pubspec.yaml in voice-assistant-app..."
          if [ ! -f voice-assistant-app/pubspec.yaml ]; then
            echo "Error: pubspec.yaml not found in voice-assistant-app. Please ensure your Flutter project is set up correctly."
            exit 1
          else
            echo "pubspec.yaml found."
          fi

      # 3. Setup Java (using Java 17, which is required by the Android SDK tools)
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # 4. Install Flutter (specify version and channel)
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.13.0'
          channel: 'stable'

      # 5. Run Flutter Doctor to verify the installation
      - name: Flutter Doctor
        run: flutter doctor -v

      # 6. Automatically accept Android licenses (without using sudo)
      - name: Accept Android Licenses
        run: yes | flutter doctor --android-licenses

      # 7. Install Flutter dependencies
      - name: Install Dependencies
        run: |
          cd voice-assistant-app
          flutter pub get

      # 8. Build the APK in release mode
      - name: Build APK
        run: |
          cd voice-assistant-app
          flutter build apk --release

      # 9. Verify that the APK was created
      - name: Verify APK Exists
        run: |
          cd voice-assistant-app
          ls -la build/app/outputs/flutter-apk/

      # 10. Upload the generated APK as an artifact
      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: voice-assistant-app/build/app/outputs/flutter-apk/app-release.apk
          retention-days: 30
